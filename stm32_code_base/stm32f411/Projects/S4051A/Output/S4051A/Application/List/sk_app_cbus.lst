###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     11/Nov/2014  19:23:50 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Libraries\AMT_Drivers\sii953x\application\app_cbus\sk #
#                    _app_cbus.c                                              #
#    Command line =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Libraries\AMT_Drivers\sii953x\application\app_cbus\sk #
#                    _app_cbus.c -D S4051A -D DEBUG -D FREE_RTOS -D           #
#                    STM32F40_41xxx -D USE_STM324xG_EVAL -D                   #
#                    USE_STDPERIPH_DRIVER -D __ARM_CORTEX_MX__ -D             #
#                    IAR_ARM_CM4F -D USE_USB_OTG_FS -lcN                      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Application\Li #
#                    st\ -o C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\ #
#                    DevCode\2\Projects\S4051A\EWARM\..\Output\S4051A\Applica #
#                    tion\Obj\ --debug --endian=little --cpu=Cortex-M4 -e     #
#                    --fpu=VFPv4_sp --dlib_config "C:\Program Files           #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\inc\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\ -I                  #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\Include\ -I          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\ -I         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\USB_HD\inc\ #
#                     -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\Dev #
#                    Code\2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\USB_HD\ #
#                    src\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2 #
#                    \DevCode\2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\wav #
#                    ePlayer\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\1 #
#                    5_K2\DevCode\2\Projects\S4051A\EWARM\..\App_SRC\Managers #
#                    \ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\De #
#                    vCode\2\Projects\S4051A\EWARM\..\App_SRC\Dispatchers\    #
#                    -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevC #
#                    ode\2\Projects\S4051A\EWARM\..\..\..\Libraries\CMSIS\Inc #
#                    lude\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K #
#                    2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\CMS #
#                    IS\Device\ST\STM32F4xx\Include\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32F4xx_St #
#                    dPeriph_Driver\inc\ -I C:\Users\tony.tsou\Desktop\AmTRAN #
#                    \Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\.. #
#                    \Libraries\FreeRTOS\Source\portable\IAR\ARM_CM4F\ -I     #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\FreeRTOS\Sou #
#                    rce\include\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projec #
#                    ts\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Librar #
#                    ies\FreeRTOS\Source\ -I C:\Users\tony.tsou\Desktop\AmTRA #
#                    N\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\. #
#                    .\Libraries\STM32_USB_OTG_Driver\inc\ -I                 #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32_USB_De #
#                    vice_Library\Core\inc\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\    #
#                    -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevC #
#                    ode\2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32_USB #
#                    _HOST_Library\Core\inc\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\ -I  #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Utilities\Third_Party\ #
#                    efsl\inc\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\ #
#                    15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Utilities #
#                    \Third_Party\fat_fs\inc\ -I                              #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Utilities\mainstream_v #
#                    1\stm32f411\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projec #
#                    ts\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Utilit #
#                    ies\mainstream_v1\stm32f411\it\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    EXT_FLASH\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects #
#                    \15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Librarie #
#                    s\AMT_Drivers\TAS5727\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\AMT_Drivers\TAS5711\ -I                    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    TAS5707\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\1 #
#                    5_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\ #
#                    AMT_Drivers\TAS5713\ -I C:\Users\tony.tsou\Desktop\AmTRA #
#                    N\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\. #
#                    .\Libraries\AMT_Drivers\CS49844\ -I                      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    CS8422\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15 #
#                    _K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\A #
#                    MT_Drivers\CS5346\ -I C:\Users\tony.tsou\Desktop\AmTRAN\ #
#                    Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\ #
#                    Libraries\AMT_Drivers\OTI3368\ -I                        #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    HT68F30\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\1 #
#                    5_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\ #
#                    AMT_Drivers\BTM640\ -I C:\Users\tony.tsou\Desktop\AmTRAN #
#                    \Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\.. #
#                    \Libraries\AMT_Drivers\sii953x\application\ -I           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_ipv\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_cbus\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_cdc\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_cec\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_arc\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_diag\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_msw\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_osd\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\ -I C:\Users\tony.tsou\Desktop\AmTRAN\ #
#                    Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\ #
#                    Libraries\AMT_Drivers\sii953x\component\tx\ -I           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\repeater_avr\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\video_tables\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\audio_rx\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\edid_tx\ -I                            #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\debugger_hdmigear\ -I                  #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cbus\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\component\rtpi\ -I    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cdc\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\AMT_Drivers\sii953x\component\cec_manager\ #
#                     -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\Dev #
#                    Code\2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Driv #
#                    ers\sii953x\component\thx\ -I                            #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\ipv\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\AMT_Drivers\sii953x\component\osd\ -I      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cec_switch\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cec_system_audio_control\ -I           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Pro #
#                    jects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Lib #
#                    raries\AMT_Drivers\sii953x\driver\audio_mix_drv\ -I      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\sii953x_drv\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\cra_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\matrix_sw_drv\ #
#                     -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\Dev #
#                    Code\2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Driv #
#                    ers\sii953x\driver\nvram_sram_drv\ -I                    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\tpi_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\audio_rx_drv\  #
#                    -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevC #
#                    ode\2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drive #
#                    rs\sii953x\driver\repeater_avr_drv\ -I                   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\gpio_drv\ -I                              #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\tpg_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\cbus_drv\ -I   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\cpi_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\arc_drv\ -I    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\osd_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\ipv_drv\ -I    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\ir_remote\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\eeprom\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\timer\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\i2c\ -I                             #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\osal\timer\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\board\ -Ohz -I "C:\Program Files        #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Application\Li #
#                    st\sk_app_cbus.lst                                       #
#    Object file  =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Application\Ob #
#                    j\sk_app_cbus.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode\2\Libraries\AMT_Drivers\sii953x\application\app_cbus\sk_app_cbus.c
      1          //***************************************************************************
      2          //!file     sk_app_cbus.c
      3          //!brief    Wraps board and device functions for the CBUS component
      4          //          and the application
      5          //
      6          // No part of this work may be reproduced, modified, distributed,
      7          // transmitted, transcribed, or translated into any language or computer
      8          // format, in any form or by any means without written permission of
      9          // Silicon Image, Inc., 1140 East Arques Avenue, Sunnyvale, California 94085
     10          //
     11          // Copyright 2009-2012, Silicon Image, Inc.  All rights reserved.
     12          //***************************************************************************/
     13          
     14          #include "sk_app_cbus.h"
     15          #include "si_gpio.h"
     16          #include "si_cra.h"
     17          #include "si_regs_pp953x.h"
     18          #include "si_regs_gpio953x.h"
     19          #if INC_RTPI
     20          #include "si_rtpi_component.h"
     21          #endif
     22          #if INC_CEC_SAC
     23          #include "si_sac_main.h"
     24          #endif
     25          #include "si_timer.h"
     26          #include "si_drv_tpi_system.h"
     27          #include "sk_application.h"
     28          
     29          uint8_t mhlcabledetect=0;
     30          //------------------------------------------------------------------------------
     31          //  CBUS Component configuration data
     32          //------------------------------------------------------------------------------
     33          
     34          //------------------------------------------------------------------------------
     35          // Module variables
     36          //------------------------------------------------------------------------------
     37          
     38          SiiAppCbusInstanceData_t appCbus[MHL_MAX_CHANNELS];
     39          SiiAppCbusInstanceData_t *pAppCbus;
     40          
     41          uint8_t portArray[2] = {SI_MHL_PORT0, SI_MHL_PORT1};
     42          
     43          //------------------------------------------------------------------------------
     44          // Description: Set the driver global data pointer to the requested instance.
     45          // Parameters:  instanceIndex
     46          // Returns:     true if legal index, false if index value is illegal.
     47          //------------------------------------------------------------------------------
     48          
     49          bool_t SkAppCbusInstanceSet ( uint_t instanceIndex )
     50          {
     51              if ( instanceIndex < SII_NUM_CBUS )
     52              {
     53                  SiiCbusInstanceSet( instanceIndex );
     54              	pAppCbus = &appCbus[instanceIndex];
     55              	pAppCbus->instanceIndex = instanceIndex;
     56                  return( true );
     57              }
     58              return( false );
     59          }
     60          
     61          //------------------------------------------------------------------------------
     62          //! @brief      If specified port is connected as MHL, return true.  As a side
     63          //!             effect, the port instance is selected.
     64          //! @param[in]  portIndex   - RX port index
     65          //! @return     bool_t      - true if port is a connected MHL channel
     66          //------------------------------------------------------------------------------
     67          bool_t SkAppSourceIsConnectedCbusPort ( SiiSwitchSource_t source )
     68          {
     69              int channel;
     70          
     71              // Must be a TMDS source
     72              if ( source < SiiSwitchSourceInternalVideo)
     73              {
     74                  for ( channel = 0; channel < MHL_MAX_CHANNELS; channel++ )
     75                  {
     76                      if ( source == portArray[channel] )
     77                      {
     78                          SkAppCbusInstanceSet( channel );
     79                          if ( SiiMhlRxCbusConnected())
     80                          {
     81                              return( true );
     82                          }
     83                      }
     84                  }
     85              }
     86              return( false );
     87          }
     88          
     89          //------------------------------------------------------------------------------
     90          // Function:    SkAppCbusSendRapMessage
     91          // Parameters:  actCode - Action code.
     92          // Returns:     true if successful, false if not MHL port or other failure.
     93          //------------------------------------------------------------------------------
     94          
     95          bool_t SkAppCbusSendRapMessage ( uint8_t actCode )
     96          {
     97              bool_t  success = false;
     98          
     99              switch ( actCode )
    100              {
    101                  case MHL_RAP_CMD_POLL:
    102                  case MHL_RAP_CONTENT_ON:
    103                  case MHL_RAP_CONTENT_OFF:
    104                      if((success = SiiMhlRxSendRAPCmd( actCode )) == false)
    105                      {
    106                          DEBUG_PRINT( MSG_DBG, "Unable to send command....\n" );
    107                      }
    108                      break;
    109                  default:
    110                      DEBUG_PRINT( MSG_DBG, "Action code not recognized!!\n" );
    111                      break;
    112              }
    113          
    114              return( success );
    115          }
    116          
    117          //------------------------------------------------------------------------------
    118          // Function:    SkAppCbusSendUcpMessage
    119          // Parameters:  ucpData - ucp ASCII character
    120          //
    121          // Returns:     true if successful, false if not MHL port or other failure.
    122          //------------------------------------------------------------------------------
    123          
    124          bool_t  SkAppCbusSendUcpMessage ( uint8_t ucpData )
    125          {
    126              bool_t  success;
    127          
    128              if((success = SiiMhlRxSendUCPCmd( ucpData )) == false)
    129              {
    130                  DEBUG_PRINT( MSG_DBG, "Unable to send ucp....\n" );
    131              }
    132          
    133              return( success );
    134          }
    135          
    136          //------------------------------------------------------------------------------
    137          // Function:    SkAppCbusProcessRcpMessage
    138          // Description: Process the passed RCP message.
    139          // Returns:     The RCPK status code.
    140          //------------------------------------------------------------------------------
    141          static uint8_t SkAppCbusProcessRcpMessage ( uint8_t rcpData )
    142          {
    143              uint8_t rcpkStatus  = MHL_MSC_MSG_RCP_NO_ERROR;
    144          
    145              DEBUG_PRINT( MSG_DBG, "RCP Key Code: 0x%02X\n", (int)rcpData );
    146          
    147          #if INC_RTPI
    148              SiiRtpiSetInt(RP_M__INTERRUPT2__CBUS_MSG_RECEIVED << 8);
    149          #endif
    150          
    151          #if INC_CEC
    152              {
    153          #if INC_CEC_SAC
    154                  if ( !SkAppAudioProcessSacCommand( rcpData ))
    155          #endif
    156                  {
    157                      // Message wasn't processed, send it to CEC bus
    158                      SkAppCbusRcpToCec( rcpData );
    159                  }
    160              }
    161          #endif
    162          
    163          	return( rcpkStatus );
    164          }
    165          
    166          //------------------------------------------------------------------------------
    167          //! @brief  Part of the callback from the CBUS component used for RAPx messages
    168          // Returns:     The RAPK status code.
    169          //------------------------------------------------------------------------------
    170          static uint8_t SkAppCbusProcessRapMessage ( uint8_t cmd, uint8_t rapData )
    171          {
    172              uint8_t rapkStatus = MHL_MSC_MSG_RAP_NO_ERROR;
    173          
    174              DEBUG_PRINT( MSG_DBG, "RAP Action Code: 0x%02X\n", (int)rapData );
    175          
    176              if ( cmd == MHL_MSC_MSG_RAP )
    177              {
    178                  switch ( rapData )
    179                  {
    180                      case MHL_RAP_CMD_POLL:
    181                          break;
    182          
    183                      case MHL_RAP_CONTENT_ON:
    184                          // MHL device sent a CONTENT ON message, change our source
    185                          // selection to match the MHL device. If CEC is enabled, send
    186                          // appropriate CEC messages.
    187                          app.newSource[app.currentZone] = (SiiSwitchSource_t)pAppCbus->port;
    188                          app.newAudioSource[app.currentZone] = SiiSwitchAudioSourceDefault;
    189                          SiiMhlRxPathEnable( true );
    190          
    191                          SiiDrvTpiTmdsOutputEnable(true);
    192          
    193          #if INC_CEC
    194                          SkAppCbusRapToCec( rapData );
    195          #endif
    196                          break;
    197                      case MHL_RAP_CONTENT_OFF:
    198                          // MHL device sent a CONTENT OFF message.  We need do nothing
    199                          // unless CEC is enabled, in which case send appropriate
    200                          // CEC messages.
    201          
    202                          SiiDrvTpiTmdsOutputEnable(false);
    203          
    204          #if INC_CEC
    205                          SkAppCbusRapToCec( rapData );
    206          #endif
    207                          break;
    208                      default:
    209                          rapkStatus = MHL_MSC_MSG_RAP_UNRECOGNIZED_ACT_CODE;
    210                          break;
    211                  }
    212          
    213                  if (( rapkStatus == MHL_MSC_MSG_RAP_UNSUPPORTED_ACT_CODE ) || ( rapkStatus == MHL_MSC_MSG_RAP_UNRECOGNIZED_ACT_CODE ))
    214                  {
    215                      DEBUG_PRINT( MSG_DBG, "\nUnsupported or unrecognized MHL RAP Action Code!!\n" );
    216                  }
    217              }
    218              else    // Process RAPK command.
    219              {
    220          #if INC_CEC
    221                  SkAppCbusRapkToCec( rapData );
    222          #endif
    223              }
    224          
    225              return( rapkStatus );
    226          }
    227          
    228          //------------------------------------------------------------------------------
    229          // Function:    SkAppCbusProcessUcpMessage
    230          // Description: Process the passed UCP message.
    231          // Returns:     The UCPK status code.
    232          //------------------------------------------------------------------------------
    233          
    234          static uint8_t SkAppCbusProcessUcpMessage ( uint8_t ucpData )
    235          {
    236              uint8_t ucpkStatus = MHL_MSC_MSG_UCP_NO_ERROR;
    237          
    238              DEBUG_PRINT( MSG_DBG, "UCP ascii Code: 0x%02X\n", ucpData );
    239          
    240              if( ucpData > CBUS_UCP_ASCII_LIMIT )
    241              {
    242                  ucpkStatus = MHL_MSC_MSG_UCP_INEFFECTIVE_KEY_CODE;
    243                  DEBUG_PRINT( MSG_DBG, ("code not effective!!\n" ));
    244              }
    245          
    246              return( ucpkStatus );
    247          }
    248          
    249          //------------------------------------------------------------------------------
    250          //! @brief  This is a callback API for Cbus connection change, prototype
    251          //!         is defined in si_cbus_component.h
    252          //! @param[in]  connected   true/false
    253          //------------------------------------------------------------------------------
    254          void SiiMhlCbRxConnectChange(bool_t connected)
    255          {
    256              DEBUG_PRINT( MSG_DBG, "\n Notification to Application:: Cbus Connection Status :: %s\n", connected ? "Connected" : "Disconnected" );
    257          
    258          #if INC_CEC
    259              SkAppCbusConnectChangeCecUpdate( connected );
    260          #endif
    261          }
    262          
    263          //------------------------------------------------------------------------------
    264          // Function:    SiiMhlCbRxScratchpadWritten
    265          // Description: This is a callback API for scratchpad being written by peer, prototype
    266          //				is defined in si_cbus_component.h
    267          // Parameters:  none
    268          // Returns:     void
    269          //------------------------------------------------------------------------------
    270          void SiiMhlCbRxScratchpadWritten()
    271          {
    272          	DEBUG_PRINT( MSG_DBG, "\nNotification to Application:: Scratchpad written!!\n" );
    273          }
    274          
    275          //------------------------------------------------------------------------------
    276          // Function:    SiiMhlCbRxMscCmdResponseData
    277          // Description: Response data received from peer in response to an MSC command
    278          //				used only for MHL_READ_DEVCAP, prototype is defined in
    279          //				si_cbus_component.h
    280          // Parameters:  cmd - original MSC cmd sent from this device, response of which
    281          //				      came back from peer the the 'data' below
    282          //				data - response data from peer
    283          // Returns:     void
    284          //------------------------------------------------------------------------------
    285          void SiiMhlCbRxMscCmdResponseData (uint8_t cmd, uint8_t data)
    286          {
    287          	if( cmd == MHL_READ_DEVCAP )
    288          	{
    289          		DEBUG_PRINT( MSG_ALWAYS, "\n Last read peer's device capability register is: %02X\n", data);
    290          	}
    291          }
    292          
    293          //------------------------------------------------------------------------------
    294          //! @brief  This function is called from the CBUS component when a
    295          //!         MSC_MSG (RCP/RAP) is received.  The prototype is defined in
    296          //!         si_cbus_component.h
    297          //! @param[in]  cmd     - RCP/RCPK/RCPE, RAP/RAPK
    298          //!				msgData - RCP/RAP data
    299          //! @return     RCP/RAP error status
    300          //------------------------------------------------------------------------------
    301          uint8_t SiiMhlCbRxRcpRapReceived( uint8_t cmd, uint8_t msgData )
    302          {
    303              uint8_t     status = MHL_MSC_MSG_RCP_NO_ERROR;
    304          
    305              DEBUG_PRINT( MSG_DBG, "\nApplication layer:: SiiMhlCbRxRcpRapReceived( %02X, %02X )\n", cmd, msgData );
    306              switch ( cmd )
    307              {
    308                  case MHL_MSC_MSG_RCP:
    309                      DEBUG_PRINT( MSG_DBG, "RCP received by app.\n" );
    310                      status = SkAppCbusProcessRcpMessage( msgData );
    311                      break;
    312                  case MHL_MSC_MSG_RCPK:
    313                      DEBUG_PRINT( MSG_DBG, "RCPK received by app.\n" );
    314          #if INC_RTPI
    315                      SiiRtpiSetInt(RP_M__INTERRUPT2__CBUS_MSG_RECEIVED << 8);
    316          #endif
    317          #if INC_CEC
    318                      // If this RCPK follows an RCPE, and the initial RCP
    319                      // originated from a CEC message, send a feature abort back
    320                      // to the source of the CEC message.
    321                      if ( pAppCbus->lastRcpFailed )
    322                      {
    323                          SkAppCbusCecFeatureAbort( msgData );
    324                          pAppCbus->lastRcpFailed = false;
    325                      }
    326                      else
    327                      {
    328                      	switch(msgData)
    329                      	{
    330                      	case MHL_RCP_CMD_PLAY:
    331                          	SiiCecSendActiveSource(pAppCbus->cecLa, pAppCbus->cecPa);
    332                      		pAppCbus->deckStatus = CEC_DECKSTATUS_PLAY;
    333                      		break;
    334                      	case MHL_RCP_CMD_STOP:
    335                      		pAppCbus->deckStatus = CEC_DECKSTATUS_STOP;
    336                      		break;
    337                      	case MHL_RCP_CMD_PAUSE:
    338                      		pAppCbus->deckStatus = CEC_DECKSTATUS_STILL;
    339                      		break;
    340                      	default:
    341                      		pAppCbus->deckStatus = CEC_DECKSTATUS_PLAY;
    342                      		break;
    343                      	}
    344                      	SiiCecSendDeckStatus(pAppCbus->cecLa, pAppCbus->cecPa, pAppCbus->deckStatus);
    345                      }
    346          #endif
    347                      break;
    348                  case MHL_MSC_MSG_RCPE:
    349                      DEBUG_PRINT( MSG_DBG, "RCPE received by app.\n" );
    350          #if INC_RTPI
    351                      SiiRtpiSetInt(RP_M__INTERRUPT2__CBUS_MSG_RECEIVED << 8);
    352          #endif
    353          
    354          #if INC_CEC
    355                      pAppCbus->lastRcpFailed = true;
    356          #endif
    357                      break;
    358                  case MHL_MSC_MSG_RAP:
    359                      DEBUG_PRINT( MSG_DBG, "RAP received by app.\n" );
    360                      status = SkAppCbusProcessRapMessage( cmd, msgData );
    361                      break;
    362                  case MHL_MSC_MSG_RAPK:
    363                      DEBUG_PRINT( MSG_DBG, "RAPK received by app.\n" );
    364                      status = SkAppCbusProcessRapMessage( cmd, msgData );
    365                     break;
    366                  case MHL_MSC_MSG_UCP:
    367                      DEBUG_PRINT( MSG_DBG, "UCP received.\n" );
    368                      status = SkAppCbusProcessUcpMessage( msgData );
    369                      break;
    370                  case MHL_MSC_MSG_UCPK:
    371                      DEBUG_PRINT( MSG_DBG, "UCPK received.\n" );
    372                      break;
    373                  case MHL_MSC_MSG_UCPE:
    374                      DEBUG_PRINT( MSG_DBG, "UCPE received.\n" );
    375                     break;
    376                  default:
    377                      break;
    378              }
    379          
    380              return( status );
    381          }
    382          
    383          //------------------------------------------------------------------------------
    384          // Function:    SkAppChnEn
    385          // Description: Enable or disable the specified CBUS channel.
    386          // param		isEnable - true to enable, false to disable
    387          //------------------------------------------------------------------------------
    388          void SkAppChnEn ( bool_t isEnable )
    389          {
    390          	pAppCbus->mhlCableIn = isEnable;
    391              if ( isEnable )
    392              {
    393              	DEBUG_PRINT( MSG_STAT | DBGF_TS, "MHL Cable IN!! port: %0X\n", pAppCbus->port );
    394              	SiiPlatformGpioVbusCtrl(pAppCbus->port, ON);
    395              	SiiPlatformGpioRpwr( pAppCbus->port, OFF);
    396              }
    397              else
    398              {
    399              	DEBUG_PRINT( MSG_STAT | DBGF_TS, "MHL Cable OUT!! port: %0X\n", pAppCbus->port );
    400              	SiiPlatformGpioVbusCtrl(pAppCbus->port, OFF);
    401              	SiiPlatformGpioRpwr( pAppCbus->port, OFF);
    402              }
    403          
    404              SiiMhlRxChannelEnable(isEnable);
    405          }
    406          
    407          //------------------------------------------------------------------------------
    408          // Function:    SkAppCbusIsMhlCableConnected
    409          // Description: see if MHL cable is connected to a particular port
    410          // param		port - port#
    411          //------------------------------------------------------------------------------
    412          bool_t SkAppCbusIsMhlCableConnected ( uint8_t port )
    413          {
    414          	uint8_t	channel;
    415          	for ( channel = 0; channel < MHL_MAX_CHANNELS; channel++ )
    416          	{
    417          		if ( port == portArray[channel] )
    418          		{
    419          			SkAppCbusInstanceSet( channel );
    420          			if ( SiiRegRead( REG_CBUS_BUS_STATUS ) & BIT_BUS_CONNECTED)
    421          			{
    422          				return( true );
    423          			}
    424          		}
    425          	}
    426          	return false;
    427          }
    428          
    429          
    430          //------------------------------------------------------------------------------
    431          //! @brief:     Perform any board-level initialization required at the same
    432          //! @brief:     time as CBUS component initialization
    433          //! @params[in] none
    434          // Returns:     none
    435          //------------------------------------------------------------------------------
    436          
    437          bool_t SkAppDeviceInitCbus ( void )
    438          {
    439          	uint8_t		i;
    440          
    441          	memset( &appCbus[0], 0, sizeof(SiiAppCbusInstanceData_t) * MHL_MAX_CHANNELS);
    442          	pAppCbus = &appCbus[0];
    443          
    444          	for( i = 0; i < MHL_MAX_CHANNELS; i++ )
    445          	{
    446          		appCbus[i].port = portArray[i];
    447          		SiiCbusInstanceSet( i );
    448          		SiiMhlRxInitialize();
    449          		// We are not MHL_LD_VIDEO or MHL_LD_AUDIO because we do not actually
    450          		// source the video or audio (at least from the TMDS perspective)
    451          		appCbus[i].supportMask  = MHL_LD_DISPLAY | MHL_LD_SPEAKER | MHL_LD_GUI;
    452          		SiiCbusConfigure( appCbus[i].port, appCbus[i].supportMask );
    453          	}
    454          
    455          	return( true );
    456          }
    457          
    458          //------------------------------------------------------------------------------
    459          // Function:    SkAppCbusResume
    460          //! @brief      Restore operation to all Cbus components/drivers.
    461          //------------------------------------------------------------------------------
    462          bool_t SkAppCbusResume ( void )
    463          {
    464              SiiCbusResume();
    465              return( true );
    466          }
    467          
    468          //------------------------------------------------------------------------------
    469          // Function:    SkAppCbusStandby
    470          //! @brief      Places all CBUS components/drivers into standby
    471          // Returns:     true if the CBUS component entered standby mode successfully,
    472          //              or false if some failure occurred.
    473          //------------------------------------------------------------------------------
    474          
    475          bool_t SkAppCbusStandby ( void )
    476          {
    477          	uint8_t 	i;
    478          
    479          	for( i=0; i<MHL_MAX_CHANNELS; i++)
    480          	{
    481          		SiiPlatformGpioVbusCtrl(appCbus[i].port, OFF);
    482          		SiiPlatformGpioRpwr(appCbus[i].port, ON);
    483          	}
    484          	SiiCbusStandby();
    485          
    486          	memset(&appCbus[0], 0, sizeof(SiiAppCbusInstanceData_t) * MHL_MAX_CHANNELS);
    487          
    488              return( true );
    489          }
    490          
    491          //------------------------------------------------------------------------------
    492          // Function:    SkAppTaskCbusStandByMonitoring
    493          // Description: Wrapper for the CBUS Component at the application level
    494          // Parameters:  none
    495          // Returns:     none
    496          //------------------------------------------------------------------------------
    497          
    498          void SkAppTaskCbusStandByMonitoring (void)
    499          {
    500              clock_time_t timeDiff = SkTimeDiffMs( app.cbusTimeLastMs, SiiOsTimerTotalElapsed());
    501          
    502              if (timeDiff > 20)
    503              {
    504                  // Call SkAppTaskCbusCdsenseMonitoring with the number of milliseconds since the last call
    505              	SkAppTaskCbusCdsenseMonitoring();
    506                  app.cbusTimeLastMs = SiiOsTimerTotalElapsed();
    507              }
    508          }
    509          
    510          //------------------------------------------------------------------------------
    511          // Function:    SkAppTaskCbus
    512          // Description: Wrapper for the CBUS Component at the application level
    513          // Parameters:  none
    514          // Returns:     none
    515          //------------------------------------------------------------------------------
    516          void SkAppTaskCbus ( void )
    517          {
    518          	uint8_t i;
    519          	uint8_t status;
    520          	
    521          	for (i=0; i < MHL_MAX_CHANNELS; i++)
    522          	{
    523          		SkAppCbusInstanceSet(i);
    524          		//DEBUG_PRINT( MSG_DBG, "SkAppCbusChannelEnable:%d %d\n", i, pAppCbus->port );
    525          
    526          		SkAppTaskGpio(i);
    527          
    528          		if (pAppCbus->cbusEnable != pAppCbus->oldCbusEnable)
    529          		{
    530          			//DEBUG_PRINT(MSG_DBG,"\nCdSense changed pApp->cbusEnable: %02X, pApp->oldCbusEnable: %02X. %x\n", pAppCbus->cbusEnable, pAppCbus->oldCbusEnable,i );
    531          			SkAppChnEn(pAppCbus->cbusEnable);
    532          			pAppCbus->oldCbusEnable = pAppCbus->cbusEnable;
    533          		}
    534          		// Is there anything to do?
    535          	    if (!pAppCbus->cbusEnable)
    536          	    {
    537          	        continue;
    538          	    }
    539          
    540          	    // Should we be checking the CBUS?
    541          	    if ( !pAppCbus->cbusInterrupt && !SiiOsTimerExpired(pAppCbus->cbusTimer) )
    542          	    {
    543          	       continue;
    544          	    }
    545          
    546          		if ( pAppCbus->cbusInterrupt )
    547          		{
    548          			//DEBUG_PRINT( MSG_DBG, "\n\n CBus Interrupt came !! Timer Elapsed:: %02X\n\n", CbusTimerElapsed() );
    549          			pAppCbus->cbusInterrupt = false;
    550          		}
    551          
    552          		SiiOsTimerSet(&(pAppCbus->cbusTimer), 10); // Bug 33045 - Melbourne SiI9535/9533 MHL QD882 HDCP CTS 3C fails at four test items
    553          
    554          #if ( configSII_DEV_9535 == 1 )
    555          		if ( (status = SiiMhlRxHandler()) != CBUS_SUCCESS )	// Monitor CBUS interrupts.
    556          #else
    557          		if ( (status = SiiMhlRxHandler()) != SUCCESS )	// Monitor CBUS interrupts.
    558          #endif 
    559          		{
    560          			DEBUG_PRINT( MSG_DBG, "SiiMhlRxHandler() failed with error :: %02X\n", status );
    561          		}
    562          	}
    563          }
    564          //------------------------------------------------------------------------------
    565          // Function:    SkAppTaskCbusCdsenseMonitoring
    566          // Description: Wrapper for the CBUS Component at the application level
    567          // Parameters:  none
    568          // Returns:     none
    569          //------------------------------------------------------------------------------
    570          void SkAppTaskCbusCdsenseMonitoring ( void )
    571          {
    572          	uint8_t i;
    573          	if((app.powerState == APP_POWERSTATUS_STANDBY) || (app.powerState == APP_POWERSTATUS_INITIAL))
    574          	{
    575                  for (i=0; i < MHL_MAX_CHANNELS; i++)
    576                  {
    577                      SkAppCbusInstanceSet(i);
    578                      SkAppTaskCbusGpio(i);
    579                      if (( (pAppCbus->cdSense == 1) && (pAppCbus->oldcdSense != pAppCbus->cdSense)) /*&& (i == app.currentSource[i])*/ )
    580                      {
    581                          pAppCbus->oldcdSense = pAppCbus->cdSense;
    582                          app.mhlcabledetect = true;
    583                          SiiPlatformTimerWait( 1000 );
    584                      }
    585                  }
    586          	}
    587          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  SiiMhlCbRxConnectChange
              0 -> SkAppCbusConnectChangeCecUpdate
        0  SiiMhlCbRxMscCmdResponseData
       16  SiiMhlCbRxRcpRapReceived
             16 -> SiiCecSendActiveSource
             16 -> SiiCecSendDeckStatus
             16 -> SiiRtpiSetInt
             16 -> SkAppAudioProcessSacCommand
             16 -> SkAppCbusCecFeatureAbort
             16 -> SkAppCbusProcessRapMessage
             16 -> SkAppCbusRcpToCec
        0  SiiMhlCbRxScratchpadWritten
        8  SkAppCbusInstanceSet
              8 -> SiiCbusInstanceSet
       16  SkAppCbusIsMhlCableConnected
             16 -> SiiRegRead
             16 -> SkAppCbusInstanceSet
        8  SkAppCbusProcessRapMessage
              8 -> SiiDrvTpiTmdsOutputEnable
              8 -> SiiMhlRxPathEnable
              8 -> SkAppCbusRapToCec
              8 -> SkAppCbusRapkToCec
        8  SkAppCbusResume
              8 -> SiiCbusResume
        0  SkAppCbusSendRapMessage
              0 -> SiiMhlRxSendRAPCmd
        0  SkAppCbusSendUcpMessage
              0 -> SiiMhlRxSendUCPCmd
        8  SkAppCbusStandby
              8 -> SiiCbusStandby
              8 -> SiiPlatformGpioRpwr
              8 -> SiiPlatformGpioVbusCtrl
              8 -> __aeabi_memclr4
       16  SkAppChnEn
              0 -> SiiMhlRxChannelEnable
             16 -> SiiPlatformGpioRpwr
             16 -> SiiPlatformGpioVbusCtrl
       16  SkAppDeviceInitCbus
             16 -> SiiCbusConfigure
             16 -> SiiCbusInstanceSet
             16 -> SiiMhlRxInitialize
             16 -> __aeabi_memclr4
       16  SkAppSourceIsConnectedCbusPort
             16 -> SiiMhlRxCbusConnected
             16 -> SkAppCbusInstanceSet
       16  SkAppTaskCbus
             16 -> SiiMhlRxHandler
             16 -> SiiOsTimerExpired
             16 -> SiiOsTimerSet
             16 -> SkAppCbusInstanceSet
             16 -> SkAppChnEn
             16 -> SkAppTaskGpio
       16  SkAppTaskCbusCdsenseMonitoring
             16 -> SiiPlatformTimerWait
             16 -> SkAppCbusInstanceSet
             16 -> SkAppTaskCbusGpio
        8  SkAppTaskCbusStandByMonitoring
              8 -> SiiOsTimerTotalElapsed
              8 -> SkAppTaskCbusCdsenseMonitoring


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       8  ?Subroutine0
       4  SiiMhlCbRxConnectChange
       2  SiiMhlCbRxMscCmdResponseData
     176  SiiMhlCbRxRcpRapReceived
       2  SiiMhlCbRxScratchpadWritten
      32  SkAppCbusInstanceSet
      62  SkAppCbusIsMhlCableConnected
      88  SkAppCbusProcessRapMessage
      10  SkAppCbusResume
      22  SkAppCbusSendRapMessage
       4  SkAppCbusSendUcpMessage
      56  SkAppCbusStandby
      44  SkAppChnEn
      80  SkAppDeviceInitCbus
      56  SkAppSourceIsConnectedCbusPort
      90  SkAppTaskCbus
      68  SkAppTaskCbusCdsenseMonitoring
      38  SkAppTaskCbusStandByMonitoring
     108  appCbus
          pAppCbus
       1  mhlcabledetect
       2  portArray

 
 109 bytes in section .bss
   2 bytes in section .data
 854 bytes in section .text
 
 854 bytes of CODE memory
 111 bytes of DATA memory

Errors: none
Warnings: 4
