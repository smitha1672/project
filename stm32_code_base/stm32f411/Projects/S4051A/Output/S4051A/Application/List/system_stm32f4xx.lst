###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     11/Nov/2014  19:26:09 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Utilities\mainstream_v1\stm32f411\clk_conf\system_stm #
#                    32f4xx.c                                                 #
#    Command line =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Utilities\mainstream_v1\stm32f411\clk_conf\system_stm #
#                    32f4xx.c -D S4051A -D DEBUG -D FREE_RTOS -D              #
#                    STM32F40_41xxx -D USE_STM324xG_EVAL -D                   #
#                    USE_STDPERIPH_DRIVER -D __ARM_CORTEX_MX__ -D             #
#                    IAR_ARM_CM4F -D USE_USB_OTG_FS -lcN                      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Application\Li #
#                    st\ -o C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\ #
#                    DevCode\2\Projects\S4051A\EWARM\..\Output\S4051A\Applica #
#                    tion\Obj\ --debug --endian=little --cpu=Cortex-M4 -e     #
#                    --fpu=VFPv4_sp --dlib_config "C:\Program Files           #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\inc\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\ -I                  #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\Include\ -I          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\ -I         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\USB_HD\inc\ #
#                     -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\Dev #
#                    Code\2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\USB_HD\ #
#                    src\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2 #
#                    \DevCode\2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\wav #
#                    ePlayer\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\1 #
#                    5_K2\DevCode\2\Projects\S4051A\EWARM\..\App_SRC\Managers #
#                    \ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\De #
#                    vCode\2\Projects\S4051A\EWARM\..\App_SRC\Dispatchers\    #
#                    -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevC #
#                    ode\2\Projects\S4051A\EWARM\..\..\..\Libraries\CMSIS\Inc #
#                    lude\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K #
#                    2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\CMS #
#                    IS\Device\ST\STM32F4xx\Include\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32F4xx_St #
#                    dPeriph_Driver\inc\ -I C:\Users\tony.tsou\Desktop\AmTRAN #
#                    \Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\.. #
#                    \Libraries\FreeRTOS\Source\portable\IAR\ARM_CM4F\ -I     #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\FreeRTOS\Sou #
#                    rce\include\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projec #
#                    ts\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Librar #
#                    ies\FreeRTOS\Source\ -I C:\Users\tony.tsou\Desktop\AmTRA #
#                    N\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\. #
#                    .\Libraries\STM32_USB_OTG_Driver\inc\ -I                 #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32_USB_De #
#                    vice_Library\Core\inc\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\    #
#                    -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevC #
#                    ode\2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32_USB #
#                    _HOST_Library\Core\inc\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\ -I  #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Utilities\Third_Party\ #
#                    efsl\inc\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\ #
#                    15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Utilities #
#                    \Third_Party\fat_fs\inc\ -I                              #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Utilities\mainstream_v #
#                    1\stm32f411\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projec #
#                    ts\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Utilit #
#                    ies\mainstream_v1\stm32f411\it\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    EXT_FLASH\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects #
#                    \15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Librarie #
#                    s\AMT_Drivers\TAS5727\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\AMT_Drivers\TAS5711\ -I                    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    TAS5707\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\1 #
#                    5_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\ #
#                    AMT_Drivers\TAS5713\ -I C:\Users\tony.tsou\Desktop\AmTRA #
#                    N\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\. #
#                    .\Libraries\AMT_Drivers\CS49844\ -I                      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    CS8422\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15 #
#                    _K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\A #
#                    MT_Drivers\CS5346\ -I C:\Users\tony.tsou\Desktop\AmTRAN\ #
#                    Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\ #
#                    Libraries\AMT_Drivers\OTI3368\ -I                        #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    HT68F30\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\1 #
#                    5_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\ #
#                    AMT_Drivers\BTM640\ -I C:\Users\tony.tsou\Desktop\AmTRAN #
#                    \Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\.. #
#                    \Libraries\AMT_Drivers\sii953x\application\ -I           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_ipv\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_cbus\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_cdc\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_cec\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_arc\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_diag\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_msw\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_osd\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\ -I C:\Users\tony.tsou\Desktop\AmTRAN\ #
#                    Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\ #
#                    Libraries\AMT_Drivers\sii953x\component\tx\ -I           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\repeater_avr\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\video_tables\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\audio_rx\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\edid_tx\ -I                            #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\debugger_hdmigear\ -I                  #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cbus\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\component\rtpi\ -I    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cdc\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\AMT_Drivers\sii953x\component\cec_manager\ #
#                     -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\Dev #
#                    Code\2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Driv #
#                    ers\sii953x\component\thx\ -I                            #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\ipv\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\AMT_Drivers\sii953x\component\osd\ -I      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cec_switch\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cec_system_audio_control\ -I           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Pro #
#                    jects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Lib #
#                    raries\AMT_Drivers\sii953x\driver\audio_mix_drv\ -I      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\sii953x_drv\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\cra_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\matrix_sw_drv\ #
#                     -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\Dev #
#                    Code\2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Driv #
#                    ers\sii953x\driver\nvram_sram_drv\ -I                    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\tpi_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\audio_rx_drv\  #
#                    -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevC #
#                    ode\2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drive #
#                    rs\sii953x\driver\repeater_avr_drv\ -I                   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\gpio_drv\ -I                              #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\tpg_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\cbus_drv\ -I   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\cpi_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\arc_drv\ -I    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\osd_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\ipv_drv\ -I    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\ir_remote\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\eeprom\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\timer\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\i2c\ -I                             #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\osal\timer\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\board\ -Ohz -I "C:\Program Files        #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Application\Li #
#                    st\system_stm32f4xx.lst                                  #
#    Object file  =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Application\Ob #
#                    j\system_stm32f4xx.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode\2\Utilities\mainstream_v1\stm32f411\clk_conf\system_stm32f4xx.c
      1          /**
      2            ******************************************************************************
      3            * @file    system_stm32f4xx.c
      4            * @author  MCD Application Team
      5            * @version V1.0.0
      6            * @date    11-September-2013
      7            * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
      8            *          This file contains the system clock configuration for STM32F4xx devices.
      9            *
     10            *          The STM32F401x is configured to run at 84 MHz, following the three  
     11            *          configuration below:
     12            *            - PLL_SOURCE_HSI                : HSI (~16MHz) used to clock the PLL, and
     13            *                                              the PLL is used as system clock source.  
     14            *            - PLL_SOURCE_HSE                : HSE (8MHz) used to clock the PLL, and 
     15            *                                              the PLL is used as system clock source.
     16            *            - PLL_SOURCE_HSE_BYPASS         : HSE bypassed with an external clock 
     17            *                                              (8MHz, coming from ST-Link) used to clock
     18            *                                              the PLL, and the PLL is used as system
     19            *                                              clock source.  
     20            *
     21            * 1.  This file provides two functions and one global variable to be called from 
     22            *     user application:
     23            *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
     24            *                      and Divider factors, AHB/APBx prescalers and Flash settings),
     25            *                      depending on the configuration made in the clock xls tool. 
     26            *                      This function is called at startup just after reset and 
     27            *                      before branch to main program. This call is made inside
     28            *                      the "startup_stm32f401xx.s" file.
     29            *
     30            *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
     31            *                                  by the user application to setup the SysTick 
     32            *                                  timer or configure other parameters.
     33            *                                     
     34            *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
     35            *                                 be called whenever the core clock is changed
     36            *                                 during program execution.
     37            *
     38            * 2. After each device reset the HSI (16 MHz) is used as system clock source.
     39            *    Then SystemInit() function is called, in "startup_stm32f401xx.s" file, to
     40            *    configure the system clock before to branch to main program.
     41            *
     42            * 3. If the system clock source selected by user fails to startup, the SystemInit()
     43            *    function will do nothing and HSI still used as system clock source. User can 
     44            *    add some code to deal with this issue inside the SetSysClock() function.
     45            *
     46            * 4. The default value of HSE crystal is set to 8 MHz, refer to "HSE_VALUE" define
     47            *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
     48            *    through PLL, and you are using different crystal you have to adapt the HSE
     49            *    value to your own configuration.
     50            *
     51            ****************************************************************************** 
     52            * @attention
     53            *
     54            * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
     55            *
     56            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     57            * You may not use this file except in compliance with the License.
     58            * You may obtain a copy of the License at:
     59            *
     60            *        http://www.st.com/software_license_agreement_liberty_v2
     61            *
     62            * Unless required by applicable law or agreed to in writing, software 
     63            * distributed under the License is distributed on an "AS IS" BASIS, 
     64            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     65            * See the License for the specific language governing permissions and
     66            * limitations under the License.
     67            *
     68            ******************************************************************************
     69            */
     70          
     71          /** @addtogroup CMSIS
     72            * @{
     73            */
     74          
     75          /** @addtogroup stm32f4xx_system
     76            * @{
     77            */  
     78            
     79          /** @addtogroup STM32F4xx_System_Private_Includes
     80            * @{
     81            */
     82          
     83          #include "stm32f4xx.h"
     84          
     85          /**
     86            * @}
     87            */
     88          
     89          /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
     90            * @{
     91            */
     92          
     93          /**
     94            * @}
     95            */
     96          
     97          /** @addtogroup STM32F4xx_System_Private_Defines
     98            * @{
     99            */
    100          
    101          /************************* Miscellaneous Configuration ************************/
    102          /*!< Uncomment the following line if you need to relocate your vector Table in
    103               Internal SRAM. */
    104          /* #define VECT_TAB_SRAM */
    105          #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
    106                                             This value must be a multiple of 0x200. */
    107          /******************************************************************************/
    108          
    109          /************************* PLL Parameters *************************************/
    110          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
    111          #define PLL_M      8
    112          #define PLL_N      336
    113          
    114          /* SYSCLK = PLL_VCO / PLL_P */
    115          #define PLL_P      4
    116          
    117          /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
    118          #define PLL_Q      7
    119          
    120          /* PLLI2S_VCO = (HSE_VALUE Or HSI_VALUE / PLL_M) * PLLI2S_N
    121             I2SCLK = PLLI2S_VCO / PLLI2S_R */
    122          #define PLLI2S_N   271//258
    123          #define PLLI2S_R   2//3
    124          #define PLLI2S_M   8//2
    125          
    126          /******************************************************************************/
    127          
    128          /* Select the PLL clock source */
    129          
    130          //#define PLL_SOURCE_HSI        /* HSI (~8MHz) used to clock the PLL, and the PLL is used as system clock source*/
    131          #define PLL_SOURCE_HSE        /* HSE (8MHz) used to clock the PLL, and the PLL is used as system clock source */
    132          //#define PLL_SOURCE_HSE_BYPASS   /* HSE bypassed with an external clock (8MHz, coming from ST-Link) used to clock
    133          //                                   the PLL, and the PLL is used as system clock source */
    134          /**
    135            * @}
    136            */
    137          
    138          /** @addtogroup STM32F4xx_System_Private_Macros
    139            * @{
    140            */
    141          
    142          /**
    143            * @}
    144            */
    145          
    146          /** @addtogroup STM32F4xx_System_Private_Variables
    147            * @{
    148            */
    149          
    150            uint32_t SystemCoreClock = 84000000;
    151          
    152            __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
    153          
    154          /**
    155            * @}
    156            */
    157          
    158          /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
    159            * @{
    160            */
    161          
    162          static void SetSysClock(void);
    163          
    164          /**
    165            * @}
    166            */
    167          
    168          /** @addtogroup STM32F4xx_System_Private_Functions
    169            * @{
    170            */
    171          
    172          /**
    173            * @brief  Setup the microcontroller system
    174            *         Initialize the Embedded Flash Interface, the PLL and update the 
    175            *         SystemFrequency variable.
    176            * @param  None
    177            * @retval None
    178            */
    179          void SystemInit(void)
    180          {
    181            /* FPU settings ------------------------------------------------------------*/
    182            #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    183              SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
    184            #endif
    185            /* Reset the RCC clock configuration to the default reset state ------------*/
    186            /* Set HSION bit */
    187            RCC->CR |= (uint32_t)0x00000001;
    188          
    189            /* Reset CFGR register */
    190            RCC->CFGR = 0x00000000;
    191          
    192            /* Reset HSEON, CSSON and PLLON bits */
    193            RCC->CR &= (uint32_t)0xFEF6FFFF;
    194          
    195            /* Reset PLLCFGR register */
    196            RCC->PLLCFGR = 0x24003010;
    197          
    198            /* Reset HSEBYP bit */
    199            RCC->CR &= (uint32_t)0xFFFBFFFF;
    200          
    201            /* Disable all interrupts */
    202            RCC->CIR = 0x00000000;
    203                 
    204            /* Configure the System clock source, PLL Multiplier and Divider factors, 
    205               AHB/APBx prescalers and Flash settings ----------------------------------*/
    206            SetSysClock();
    207          
    208            /* Configure the Vector Table location add offset address ------------------*/
    209          #ifdef VECT_TAB_SRAM
    210            SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
    211          #else
    212            SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
    213          #endif
    214          }
    215          
    216          /**
    217             * @brief  Update SystemCoreClock variable according to Clock Register Values.
    218            *         The SystemCoreClock variable contains the core clock (HCLK), it can
    219            *         be used by the user application to setup the SysTick timer or configure
    220            *         other parameters.
    221            *           
    222            * @note   Each time the core clock (HCLK) changes, this function must be called
    223            *         to update SystemCoreClock variable value. Otherwise, any configuration
    224            *         based on this variable will be incorrect.         
    225            *     
    226            * @note   - The system frequency computed by this function is not the real 
    227            *           frequency in the chip. It is calculated based on the predefined 
    228            *           constant and the selected clock source:
    229            *             
    230            *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
    231            *                                              
    232            *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
    233            *                          
    234            *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
    235            *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
    236            *         
    237            *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
    238            *             16 MHz) but the real value may vary depending on the variations
    239            *             in voltage and temperature.   
    240            *    
    241            *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
    242            *              8 MHz), user has to ensure that HSE_VALUE is same as the real
    243            *              frequency of the crystal used. Otherwise, this function may
    244            *              have wrong result.
    245            *                
    246            *         - The result of this function could be not correct when using fractional
    247            *           value for HSE crystal.
    248            *     
    249            * @param  None
    250            * @retval None
    251            */
    252          void SystemCoreClockUpdate(void)
    253          {
    254            uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
    255            
    256            /* Get SYSCLK source -------------------------------------------------------*/
    257            tmp = RCC->CFGR & RCC_CFGR_SWS;
    258          
    259            switch (tmp)
    260            {
    261              case 0x00:  /* HSI used as system clock source */
    262                SystemCoreClock = HSI_VALUE;
    263                break;
    264              case 0x04:  /* HSE used as system clock source */
    265                SystemCoreClock = HSE_VALUE;
    266                break;
    267              case 0x08:  /* PLL used as system clock source */
    268          
    269                /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
    270                   SYSCLK = PLL_VCO / PLL_P
    271                   */    
    272                pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
    273                pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
    274                
    275                if (pllsource != 0)
    276                {
    277                  /* HSE used as PLL clock source */
    278                  pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
    279                }
    280                else
    281                {
    282                  /* HSI used as PLL clock source */
    283                  pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
    284                }
    285          
    286                pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
    287                SystemCoreClock = pllvco/pllp;
    288                break;
    289              default:
    290                SystemCoreClock = HSI_VALUE;
    291                break;
    292            }
    293            /* Compute HCLK frequency --------------------------------------------------*/
    294            /* Get HCLK prescaler */
    295            tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
    296            /* HCLK frequency */
    297            SystemCoreClock >>= tmp;
    298          }
    299          
    300          /**
    301            * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
    302            *         AHB/APBx prescalers and Flash settings
    303            * @Note   This function should be called only once the RCC clock configuration  
    304            *         is reset to the default reset state (done in SystemInit() function).   
    305            * @param  None
    306            * @retval None
    307            */
    308          static void SetSysClock(void)
    309          {
    310          /******************************************************************************/
    311          /*            PLL  used as System clock source                */
    312          /******************************************************************************/
    313            __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
    314          
    315              
    316          #ifdef PLL_SOURCE_HSI
    317              
    318              /* Enable HSI */
    319              RCC->CR |= ((uint32_t)RCC_CR_HSION);   
    320              /* Configure the main PLL */
    321              RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
    322                             (RCC_PLLCFGR_PLLSRC_HSI) | (PLL_Q << 24);
    323             
    324          #else  /* PLL_SOURCE_HSE_BYPASS or PLL_SOURCE_HSE */
    325              
    326              /* Enable HSE */
    327              RCC->CR |= ((uint32_t)RCC_CR_HSEON);
    328            #if defined (PLL_SOURCE_HSE_BYPASS)
    329              /* HSE oscillator bypassed with external clock */    
    330              RCC->CR |= (uint32_t)(RCC_CR_HSEBYP);
    331            #endif  /* PLL_SOURCE_HSE_BYPASS */
    332           
    333            /* Wait till HSE is ready and if Time out is reached exit */
    334            do
    335            {
    336              HSEStatus = RCC->CR & RCC_CR_HSERDY;
    337              StartUpCounter++;
    338            } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
    339          
    340            if ((RCC->CR & RCC_CR_HSERDY) != RESET)
    341            {
    342              HSEStatus = (uint32_t)0x01;
    343            }
    344            else
    345            {
    346              HSEStatus = (uint32_t)0x00;
    347            }
    348          
    349            if (HSEStatus == (uint32_t)0x01)
    350            {
    351          
    352              /* Configure the main PLL */
    353              RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
    354                             (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
    355          
    356            }
    357              else
    358            { /* If HSE fails to start-up, the application will have wrong clock
    359                   configuration. User can add here some code to deal with this error */
    360            }
    361          #endif  /* PLL_SOURCE_HSI */
    362            
    363               /* Select regulator voltage output Scale 2 mode, System frequency up to 84 MHz */
    364              RCC->APB1ENR |= RCC_APB1ENR_PWREN;
    365              PWR->CR &= (uint32_t)~(PWR_CR_VOS);
    366          
    367              /* HCLK = SYSCLK / 1*/
    368              RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
    369                
    370              /* PCLK2 = HCLK / 1*/
    371              RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;
    372              
    373              /* PCLK1 = HCLK / 2*/
    374              RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;  
    375           
    376            /* Enable the main PLL */
    377              RCC->CR |= RCC_CR_PLLON;
    378          
    379              /* Wait till the main PLL is ready */
    380              while((RCC->CR & RCC_CR_PLLRDY) == 0)
    381              {
    382              }
    383             
    384              /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
    385              FLASH->ACR = FLASH_ACR_PRFTEN |FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_2WS;
    386          
    387              /* Select the main PLL as system clock source */
    388              RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
    389              RCC->CFGR |= RCC_CFGR_SW_PLL;
    390          
    391              /* Wait till the main PLL is used as system clock source */
    392              while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
    393              {
    394              }
    395            
    396          
    397          
    398          
    399          /******************************************************************************/
    400          /*                          I2S clock configuration                           */
    401          /******************************************************************************/
    402            /* PLLI2S clock used as I2S clock source */
    403            RCC->CFGR &= ~RCC_CFGR_I2SSRC;
    404          
    405            /* Configure PLLI2S */
    406            //RCC->PLLI2SCFGR = (PLLI2S_N << 6) | (PLLI2S_R << 28);
    407            RCC->PLLI2SCFGR = (PLLI2S_N << 6) | (PLLI2S_R << 28) | PLLI2S_M;
    408          
    409            /* Enable PLLI2S */
    410            RCC->CR |= ((uint32_t)RCC_CR_PLLI2SON);
    411          
    412            /* Wait till PLLI2S is ready */
    413            while((RCC->CR & RCC_CR_PLLI2SRDY) == 0)
    414            {
    415            }
    416          }
    417          
    418          /**
    419            * @}
    420            */
    421          
    422          /**
    423            * @}
    424            */
    425            
    426          /**
    427            * @}
    428            */    
    429          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
    430          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  SystemCoreClockUpdate
        8  SystemInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
      20  AHBPrescTable
          SystemCoreClock
      90  SystemCoreClockUpdate
     230  SystemInit

 
  20 bytes in section .data
 376 bytes in section .text
 
 376 bytes of CODE memory
  20 bytes of DATA memory

Errors: none
Warnings: none
