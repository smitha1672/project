###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     11/Nov/2014  19:23:49 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Libraries\AMT_Drivers\sii953x\component\edid_tx\si_ed #
#                    id_tx_analyzer.c                                         #
#    Command line =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Libraries\AMT_Drivers\sii953x\component\edid_tx\si_ed #
#                    id_tx_analyzer.c -D S4051A -D DEBUG -D FREE_RTOS -D      #
#                    STM32F40_41xxx -D USE_STM324xG_EVAL -D                   #
#                    USE_STDPERIPH_DRIVER -D __ARM_CORTEX_MX__ -D             #
#                    IAR_ARM_CM4F -D USE_USB_OTG_FS -lcN                      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Application\Li #
#                    st\ -o C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\ #
#                    DevCode\2\Projects\S4051A\EWARM\..\Output\S4051A\Applica #
#                    tion\Obj\ --debug --endian=little --cpu=Cortex-M4 -e     #
#                    --fpu=VFPv4_sp --dlib_config "C:\Program Files           #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\inc\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\ -I                  #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\Include\ -I          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\ -I         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\USB_HD\inc\ #
#                     -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\Dev #
#                    Code\2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\USB_HD\ #
#                    src\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2 #
#                    \DevCode\2\Projects\S4051A\EWARM\..\App_SRC\SERVICES\wav #
#                    ePlayer\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\1 #
#                    5_K2\DevCode\2\Projects\S4051A\EWARM\..\App_SRC\Managers #
#                    \ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\De #
#                    vCode\2\Projects\S4051A\EWARM\..\App_SRC\Dispatchers\    #
#                    -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevC #
#                    ode\2\Projects\S4051A\EWARM\..\..\..\Libraries\CMSIS\Inc #
#                    lude\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K #
#                    2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\CMS #
#                    IS\Device\ST\STM32F4xx\Include\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32F4xx_St #
#                    dPeriph_Driver\inc\ -I C:\Users\tony.tsou\Desktop\AmTRAN #
#                    \Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\.. #
#                    \Libraries\FreeRTOS\Source\portable\IAR\ARM_CM4F\ -I     #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\FreeRTOS\Sou #
#                    rce\include\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projec #
#                    ts\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Librar #
#                    ies\FreeRTOS\Source\ -I C:\Users\tony.tsou\Desktop\AmTRA #
#                    N\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\. #
#                    .\Libraries\STM32_USB_OTG_Driver\inc\ -I                 #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32_USB_De #
#                    vice_Library\Core\inc\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\    #
#                    -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevC #
#                    ode\2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32_USB #
#                    _HOST_Library\Core\inc\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\ -I  #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Utilities\Third_Party\ #
#                    efsl\inc\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\ #
#                    15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Utilities #
#                    \Third_Party\fat_fs\inc\ -I                              #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Utilities\mainstream_v #
#                    1\stm32f411\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projec #
#                    ts\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Utilit #
#                    ies\mainstream_v1\stm32f411\it\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    EXT_FLASH\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects #
#                    \15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Librarie #
#                    s\AMT_Drivers\TAS5727\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\AMT_Drivers\TAS5711\ -I                    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    TAS5707\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\1 #
#                    5_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\ #
#                    AMT_Drivers\TAS5713\ -I C:\Users\tony.tsou\Desktop\AmTRA #
#                    N\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\. #
#                    .\Libraries\AMT_Drivers\CS49844\ -I                      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    CS8422\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15 #
#                    _K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\A #
#                    MT_Drivers\CS5346\ -I C:\Users\tony.tsou\Desktop\AmTRAN\ #
#                    Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\ #
#                    Libraries\AMT_Drivers\OTI3368\ -I                        #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    HT68F30\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\1 #
#                    5_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\ #
#                    AMT_Drivers\BTM640\ -I C:\Users\tony.tsou\Desktop\AmTRAN #
#                    \Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\.. #
#                    \Libraries\AMT_Drivers\sii953x\application\ -I           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_ipv\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_cbus\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_cdc\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_cec\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_arc\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_diag\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_msw\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\application\app_osd\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\ -I C:\Users\tony.tsou\Desktop\AmTRAN\ #
#                    Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\ #
#                    Libraries\AMT_Drivers\sii953x\component\tx\ -I           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\repeater_avr\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\video_tables\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\audio_rx\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\edid_tx\ -I                            #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\debugger_hdmigear\ -I                  #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cbus\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\component\rtpi\ -I    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cdc\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\AMT_Drivers\sii953x\component\cec_manager\ #
#                     -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\Dev #
#                    Code\2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Driv #
#                    ers\sii953x\component\thx\ -I                            #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\ipv\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Libraries\AMT_Drivers\sii953x\component\osd\ -I      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cec_switch\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\component\cec_system_audio_control\ -I           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Pro #
#                    jects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Lib #
#                    raries\AMT_Drivers\sii953x\driver\audio_mix_drv\ -I      #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\sii953x_drv\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\cra_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\matrix_sw_drv\ #
#                     -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\Dev #
#                    Code\2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Driv #
#                    ers\sii953x\driver\nvram_sram_drv\ -I                    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\tpi_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\audio_rx_drv\  #
#                    -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevC #
#                    ode\2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drive #
#                    rs\sii953x\driver\repeater_avr_drv\ -I                   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\gpio_drv\ -I                              #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\tpg_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\cbus_drv\ -I   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\cpi_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\arc_drv\ -I    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\driver\osd_drv\ -I C:\Users\tony.tsou\Desktop\Am #
#                    TRAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\. #
#                    .\..\Libraries\AMT_Drivers\sii953x\driver\ipv_drv\ -I    #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\ir_remote\ -I                       #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\eeprom\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\timer\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\hal\i2c\ -I                             #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\osal\timer\ -I                          #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    sii953x\platform\board\ -Ohz -I "C:\Program Files        #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Application\Li #
#                    st\si_edid_tx_analyzer.lst                               #
#    Object file  =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Application\Ob #
#                    j\si_edid_tx_analyzer.o                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode\2\Libraries\AMT_Drivers\sii953x\component\edid_tx\si_edid_tx_analyzer.c
      1          //************************************************************************************************
      2          //! @file   si_edid_tx_analyze.h
      3          //! @brief  Downstream EDID analysis
      4          //
      5          // No part of this work may be reproduced, modified, distributed,
      6          // transmitted, transcribed, or translated into any language or computer
      7          // format, in any form or by any means without written permission of
      8          // Silicon Image, Inc., 1060 East Arques Avenue, Sunnyvale, California 94085
      9          //
     10          // Copyright 2002-2010, Silicon Image, Inc.  All rights reserved.
     11          //***********************************************************************************************/
     12          
     13          #include <string.h>
     14          #include "si_edid_tx_component.h"
     15          #include "si_edid_tx_internal.h"
     16          
     17          //-------------------------------------------------------------------------------------------------
     18          //! @brief      Store EDID based data which is to be used during video signal processing.
     19          //!
     20          //-------------------------------------------------------------------------------------------------
     21          
     22          void EdidTxAnalyze(void)
     23          {
     24              pEdidTx->pEdidDecodData->edidAnalysis.HdmiMode = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.HdmiMode;
     25              pEdidTx->pEdidDecodData->edidAnalysis.SupportAudio = pEdidTx->pEdidDecodData->edidInfo.SupportAudio;
     26              pEdidTx->pEdidDecodData->edidAnalysis.SupportYCbCr = pEdidTx->pEdidDecodData->edidInfo.SupportYCbCr;
     27              pEdidTx->pEdidDecodData->edidAnalysis.RemedyMask = pEdidTx->pEdidDecodData->edidInfo.RemedyMask;
     28              pEdidTx->pEdidDecodData->edidAnalysis.SupportNtsc = pEdidTx->pEdidDecodData->edidInfo.SupportNtsc;
     29              pEdidTx->pEdidDecodData->edidAnalysis.SupportPal = pEdidTx->pEdidDecodData->edidInfo.SupportPal;
     30              pEdidTx->pEdidDecodData->edidAnalysis.Support16x9 = pEdidTx->pEdidDecodData->edidInfo.SupportAspect16_9;
     31              pEdidTx->pEdidDecodData->edidAnalysis.Support4x3 = pEdidTx->pEdidDecodData->edidInfo.SupportAspect4_3;
     32              pEdidTx->pEdidDecodData->edidAnalysis.Extra0 = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[0];
     33          #if (SI_HDMI_1_4_EDID_PROCESSING == ENABLE)
     34              pEdidTx->pEdidDecodData->edidAnalysis.Support3D = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.hdmi_3d_present;
     35              pEdidTx->pEdidDecodData->edidAnalysis.hdmi_3d_structure_all = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.hdmi_3d_structure_all;
     36          
     37          #endif // SI_HDMI_1_4_EDID_PROCESSING
     38              memcpy(&pEdidTx->pEdidDecodData->edidAnalysis.SDTD, pEdidTx->pEdidDecodData->edidInfo.SDTD, sizeof(pEdidTx->pEdidDecodData->edidAnalysis.SDTD));
     39              {
     40                  uint8_t NumOfSads = pEdidTx->pEdidDecodData->edidInfo.SadCount;
     41                  int i;
     42                  pEdidTx->pEdidDecodData->edidAnalysis.SupportEncodedAudio = false;
     43                  pEdidTx->pEdidDecodData->edidAnalysis.SupportDtd = false;
     44                  pEdidTx->pEdidDecodData->edidAnalysis.SupportHbra = false;
     45                  pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmMcAudio = false;
     46                  pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmFs88k = false;
     47                  pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmFs96k = false;
     48                  pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmFs176k = false;
     49                  pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmFs192k = false;
     50          
     51                  for (i = 0; i < NumOfSads; i++)
     52                  {
     53                      uint8_t coding = pEdidTx->pEdidDecodData->edidInfo.SAD[i].Common.Coding;
     54                      switch (coding)
     55                      {
     56                          case AUDIO_CODING__LPCM:
     57                              pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmMcAudio = (pEdidTx->pEdidDecodData->edidInfo.SAD[i].Common.MaxChannel > 2);
     58                              pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmFs88k = pEdidTx->pEdidDecodData->edidInfo.SAD[i].Common.Fs88k;
     59                              pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmFs96k = pEdidTx->pEdidDecodData->edidInfo.SAD[i].Common.Fs96k;
     60                              pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmFs176k = pEdidTx->pEdidDecodData->edidInfo.SAD[i].Common.Fs176k;
     61                              pEdidTx->pEdidDecodData->edidAnalysis.SupportPcmFs192k = pEdidTx->pEdidDecodData->edidInfo.SAD[i].Common.Fs192k;
     62          
     63                              break;
     64                          case AUDIO_CODING__1BIT:
     65                              pEdidTx->pEdidDecodData->edidAnalysis.SupportDtd = true;
     66                              break;
     67                          case AUDIO_CODING__DDP: // Dolby Digital +
     68                          case AUDIO_CODING__DTSHD: // DTS-HD
     69                          case AUDIO_CODING__MLP: // Dolby True HD (MAT/MLP)
     70                              pEdidTx->pEdidDecodData->edidAnalysis.SupportHbra = true;
     71                          default:
     72                              pEdidTx->pEdidDecodData->edidAnalysis.SupportEncodedAudio = true;
     73                              break;
     74                      }
     75                  }
     76              }
     77          
     78              if (pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[2] & 0x80)
     79              {
     80                  // if DS latency fields are found
     81          
     82                  pEdidTx->pEdidDecodData->edidAnalysis.latency[0] = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[3];
     83                  pEdidTx->pEdidDecodData->edidAnalysis.latency[1] = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[4];
     84          
     85                  if (pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[2] & 0x40)
     86                  {
     87                      // if DS interlaced latency fields are found
     88                      pEdidTx->pEdidDecodData->edidAnalysis.latency[2] = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[5];
     89                      pEdidTx->pEdidDecodData->edidAnalysis.latency[3] = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[6];
     90                  }
     91                  else
     92                  {
     93                      // if DS interlaced latency fields are NOT found
     94                      pEdidTx->pEdidDecodData->edidAnalysis.latency[2] = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[3];
     95                      pEdidTx->pEdidDecodData->edidAnalysis.latency[3] = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[4];
     96                  }
     97              }
     98              else
     99              {
    100                  // Latency fields were not found at DS EDID
    101                  memset(pEdidTx->pEdidDecodData->edidAnalysis.latency, 0, sizeof(pEdidTx->pEdidDecodData->edidAnalysis.latency));
    102              }
    103          
    104              pEdidTx->pEdidDecodData->edidAnalysis.MaxTmdsClk = pEdidTx->pEdidDecodData->edidInfo.HDMI_VSDB.Extras[1];
    105          
    106              pEdidTx->pEdidDecodData->edidAnalysis.xvYCC_p0 = false;
    107              if (pEdidTx->pEdidDecodData->edidInfo.SupportYCbCr)
    108              {
    109                  pEdidTx->pEdidDecodData->edidAnalysis.xvYCC_p0 = pEdidTx->pEdidDecodData->edidInfo.xv601 || pEdidTx->pEdidDecodData->edidInfo.xv709;
    110              }
    111          }
    112          
    113          //-------------------------------------------------------------------------------------------------
    114          //! @brief      Check if the given feature is supported by the given downstream.
    115          //!
    116          //! @param[in]  pEdidAnalysis - pointer to analysis results of a downstream EDID.
    117          //! @param[in]  feature - EDID feature to check.
    118          //!
    119          //! @return     true, if supported, false - otherwise.
    120          //-------------------------------------------------------------------------------------------------
    121          
    122          static bool_t DoesDsSupports(edidAnalysis_t *pEdidAnalysis, edidFeature_t feature)
    123          {
    124              bool_t isSupported = false;
    125          
    126              switch (feature)
    127              {
    128                  case SI_EDID_TX_SUPPORT_HDMI:
    129                      isSupported = pEdidAnalysis->HdmiMode;
    130                      break;
    131                  case SI_EDID_TX_SUPPORT_AI:
    132                      //ret = pEdidAnalysis->SupportAi;
    133                      isSupported = (0 != (pEdidAnalysis->Extra0 & 0x80));
    134                      break;
    135                  case SI_EDID_TX_SUPPORT_AUDIO:
    136                      isSupported = pEdidAnalysis->SupportAudio;
    137                      break;
    138                  case SI_EDID_TX_SUPPORT_YCbCr:
    139                      isSupported = pEdidAnalysis->SupportYCbCr;
    140                      break;
    141                  case SI_EDID_TX_SUPPORT_NTSC:
    142                      isSupported = pEdidAnalysis->SupportNtsc;
    143                      break;
    144                  case SI_EDID_TX_SUPPORT_PAL:
    145                      isSupported = pEdidAnalysis->SupportPal;
    146                      break;
    147                  case SI_EDID_TX_SUPPORT_ENCODED_AUDIO:
    148                      isSupported = pEdidAnalysis->SupportEncodedAudio;
    149                      break;
    150                  case SI_EDID_TX_SUPPORT_AR_16x9:
    151                      isSupported = pEdidAnalysis->Support16x9;
    152                      break;
    153                  case SI_EDID_TX_SUPPORT_AR_4x3:
    154                      isSupported = pEdidAnalysis->Support4x3;
    155                      break;
    156                  case SI_EDID_TX_SUPPORT_DEEP_COLOR_30_BIT:
    157                      isSupported = (0 != (pEdidAnalysis->Extra0 & 0x10));
    158                      break;
    159                  case SI_EDID_TX_SUPPORT_DEEP_COLOR_36_BIT:
    160                      isSupported = (0 != (pEdidAnalysis->Extra0 & 0x20));
    161                      break;
    162                  case SI_EDID_TX_SUPPORT_DEEP_COLOR_48_BIT:
    163                      isSupported = (0 != (pEdidAnalysis->Extra0 & 0x40));
    164                      break;
    165                  case SI_EDID_TX_SUPPORT_DEEP_COLOR_YCbCr_444:
    166                      isSupported = (0 != (pEdidAnalysis->Extra0 & 0x08));
    167                      break;
    168                  case SI_EDID_TX_SUPPORT_1BIT_AUDIO:
    169                      isSupported = pEdidAnalysis->SupportDtd;
    170                      break;
    171                  case SI_EDID_TX_SUPPORT_HBR_AUDIO:
    172                      isSupported = pEdidAnalysis->SupportHbra;
    173                      break;
    174                  case SI_EDID_TX_SUPPORT_MC_PCM_AUDIO:
    175                      isSupported = pEdidAnalysis->SupportPcmMcAudio;
    176                      break;
    177                  case SI_EDID_TX_SUPPORT_PCM_FS_88_KHZ:
    178                      isSupported = pEdidAnalysis->SupportPcmFs88k;
    179                      break;
    180                  case SI_EDID_TX_SUPPORT_PCM_FS_96_KHZ:
    181                      isSupported = pEdidAnalysis->SupportPcmFs96k;
    182                      break;
    183                  case SI_EDID_TX_SUPPORT_PCM_FS_176_KHZ:
    184                      isSupported = pEdidAnalysis->SupportPcmFs176k;
    185                      break;
    186                  case SI_EDID_TX_SUPPORT_PCM_FS_192_KHZ:
    187                      isSupported = pEdidAnalysis->SupportPcmFs192k;
    188                      break;
    189                  case SI_EDID_TX_SUPPORT_XVYCC_P0:
    190                      isSupported = pEdidAnalysis->xvYCC_p0;
    191                      break;
    192                  case SI_EDID_TX_SUPPORT_3D:
    193                      isSupported = pEdidAnalysis->Support3D;
    194                      //ret = true; // uncomment for debugging only
    195                      break;
    196              }
    197          
    198              return isSupported;
    199          }
    200          
    201          
    202          //-------------------------------------------------------------------------------------------------
    203          //! @brief      Check if the given feature is supported by the downstream.
    204          //!
    205          //! @param[in]  feature - EDID feature to check.
    206          //!
    207          //! @return     true, if supported, false - otherwise.
    208          //-------------------------------------------------------------------------------------------------
    209          
    210          bool_t SiiEdidTxDoesDsSupport(edidFeature_t feature)
    211          {
    212              return (DoesDsSupports(&(pEdidTx->pEdidDecodData->edidAnalysis), feature));
    213          }
    214          
    215          //-------------------------------------------------------------------------------------------------
    216          //! @brief      Return current DS device remedy mask.
    217          //!
    218          //! @return     @see TX_EDID_REMEDY_MASKS
    219          //-------------------------------------------------------------------------------------------------
    220          
    221          uint16_t SiiEdidTxDsDeviceRemedyMaskGet(void)
    222          {
    223              return pEdidTx->pEdidDecodData->edidAnalysis.RemedyMask;
    224          }
    225          
    226          //-------------------------------------------------------------------------------------------------
    227          //! @brief      Return maximum TMDS clock rate supported in MHz.
    228          //-------------------------------------------------------------------------------------------------
    229          
    230          uint16_t SiiEdidTxDsMaxTmdsClkGet(void)
    231          {
    232              return pEdidTx->pEdidDecodData->edidAnalysis.MaxTmdsClk * 5;
    233          }
    234          
    235          
    236          //-------------------------------------------------------------------------------------------------
    237          //! @brief      Determine how good the given output mode for a DS device is.
    238          //!
    239          //!             This function is used to determine whether specific video mode is supported by
    240          //!             DS device or not. It can be used for the repeater menu to dim non-supported modes.
    241          //!             The function could be used in conjunction with SiiEdidTxScalerIsOutVideoModeSupported
    242          //!             to determine whether or not dim given resolution in a repeater output mode menu.
    243          //!
    244          //! @param[in]  idx       - video mode ID,
    245          //! @param[in]  aspRatio  - aspect ratio.
    246          //!
    247          //! @return     The bigger value is returned, the better the video mode fits for the DS device.
    248          //! @retval     0  - if the mode is not supported,
    249          //! @retval     1  - the mode is available,
    250          //! @retval     2  - the mode is native, but not preferred
    251          //! @retval     3  - preferred mode
    252          //-------------------------------------------------------------------------------------------------
    253          
    254          uint8_t SiiEdidTxOutVideoModeRankGet(uint8_t idx, aspectRatio_t aspRatio)
    255          {
    256              uint8_t rate = 0; // 0 means not supported mode
    257              int i;
    258              bool_t ar16x9 = (SI_EDID_TX_ASPECT_RATIO_UNKNOWN_16x9 == aspRatio);
    259              bool_t ar_unknown = (SI_EDID_TX_ASPECT_RATIO_UNKNOWN == aspRatio);
    260              for (i=0; i<MAX_NMB_OF_KNOWN_DTDS; i++)
    261              {
    262                  if (pEdidTx->pEdidDecodData->edidAnalysis.SDTD[i].Valid)
    263                  {
    264                      if ( (ar_unknown || (ar16x9 == pEdidTx->pEdidDecodData->edidAnalysis.SDTD[i].Ar16x9)) &&
    265                          (idx == pEdidTx->pEdidDecodData->edidAnalysis.SDTD[i].VideoIdx) )
    266                      {
    267                          if (pEdidTx->pEdidDecodData->edidAnalysis.SDTD[i].PreferredTiming)
    268                              rate = 3;
    269                          else if (pEdidTx->pEdidDecodData->edidAnalysis.SDTD[i].Native)
    270                              rate = 2;
    271                          else
    272                              rate = 1;
    273                      }
    274                  }
    275              }
    276              return rate;
    277          }
    278          
    279          
    280          //-------------------------------------------------------------------------------------------------
    281          //! @brief      Return vertical and horizontal metrics of the video image,
    282          //!             according to the EDID data.
    283          //!
    284          //! @param[in]  isAspectRatio16x9 - 16x9 aspect ratio flag,
    285          //! @param[out] pVert             - pointer to vertical size variable (in mm),
    286          //! @param[out] pHoriz            - pointer to horizontal size variable (in mm)
    287          //-------------------------------------------------------------------------------------------------
    288          
    289          void EdidTxImageSizeGet(decodedEdid_t *pEdidInfo, bool_t isAspectRatio16x9, uint16_t *pVert, uint16_t *pHoriz)
    290          {
    291              uint16_t v, h;
    292          
    293              // get V size and calculate H size
    294              v = isAspectRatio16x9 ? pEdidInfo->VSize16x9 : pEdidInfo->VSize4x3;
    295          
    296              if (0 == v) // if the size for given aspect ratio is not saved, try the size for another aspect ratio
    297              {
    298                  v = isAspectRatio16x9 ? pEdidInfo->VSize4x3 : pEdidInfo->VSize16x9;
    299              }
    300          
    301              if (0 == v) // if the size is still unknown, make it
    302              {
    303                  v = DEFAULT__V_SIZE; //90; // because it is easy divisible by 9
    304              }
    305          
    306              h = v * (isAspectRatio16x9 ? 16 : 12) / 9;
    307          
    308              *pVert  = v;
    309              *pHoriz = h;
    310          }
    311          
    312          
    313          //-------------------------------------------------------------------------------------------------
    314          //! @brief      Return a copy of short DTDs from the EDID analysis data set.
    315          //!
    316          //! @param[out] pSdtds - pointer to an array to carry MAX_NMB_OF_KNOWN_DTDS of SDTDs.
    317          //-------------------------------------------------------------------------------------------------
    318          
    319          void EdidTxDsSdtdsGet(shortDtd_t pSdtds[])
    320          {
    321              memcpy(pSdtds, &pEdidTx->pEdidDecodData->edidAnalysis.SDTD, sizeof(pEdidTx->pEdidDecodData->edidAnalysis.SDTD));
    322          }
    323          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  DoesDsSupports
       16  EdidTxAnalyze
             16 -> __aeabi_memclr
             16 -> __aeabi_memcpy
        0  EdidTxDsSdtdsGet
              0 -> __aeabi_memcpy
       12  EdidTxImageSizeGet
        0  SiiEdidTxDoesDsSupport
              0 -> DoesDsSupports
        0  SiiEdidTxDsDeviceRemedyMaskGet
        0  SiiEdidTxDsMaxTmdsClkGet
       20  SiiEdidTxOutVideoModeRankGet


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
      18  ?Subroutine0
      18  ?Subroutine1
     160  DoesDsSupports
     670  EdidTxAnalyze
      18  EdidTxDsSdtdsGet
      54  EdidTxImageSizeGet
      14  SiiEdidTxDoesDsSupport
      12  SiiEdidTxDsDeviceRemedyMaskGet
      18  SiiEdidTxDsMaxTmdsClkGet
      92  SiiEdidTxOutVideoModeRankGet

 
 1 078 bytes in section .text
 
 1 078 bytes of CODE memory

Errors: none
Warnings: 1
