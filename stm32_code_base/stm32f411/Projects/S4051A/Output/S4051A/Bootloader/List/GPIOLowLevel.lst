###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     10/Nov/2014  15:19:22 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Utilities\mainstream_v1\stm32f411\GPIOLowLevel.c      #
#    Command line =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Utilities\mainstream_v1\stm32f411\GPIOLowLevel.c -D   #
#                    __ARM_CORTEX_MX__ -D DEBUG -D FREE_RTOS -D               #
#                    STM32F40_41xxx -D USE_STM324xG_EVAL -D                   #
#                    USE_STDPERIPH_DRIVER -D HOST_MODE_ENABLED -D             #
#                    IAR_ARM_CM4F -D USE_USB_OTG_FS -D STM32_IAP -D S4051A    #
#                    -lcN C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\De #
#                    vCode\2\Projects\S4051A\EWARM\..\Output\S4051A\Bootloade #
#                    r\List\ -o C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15 #
#                    _K2\DevCode\2\Projects\S4051A\EWARM\..\Output\S4051A\Boo #
#                    tloader\Obj\ --debug --endian=little --cpu=Cortex-M4 -e  #
#                    --fpu=VFPv4_sp --dlib_config "C:\Program Files           #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\inc\ -I                         #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Projects\STM32_IAP\inc #
#                    \ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\De #
#                    vCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\CMSIS\I #
#                    nclude\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15 #
#                    _K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Libraries\C #
#                    MSIS\Device\ST\STM32F4xx\Include\ -I                     #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32F4xx_St #
#                    dPeriph_Driver\inc\ -I C:\Users\tony.tsou\Desktop\AmTRAN #
#                    \Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\.. #
#                    \Libraries\FreeRTOS\Source\portable\IAR\ARM_CM4F\ -I     #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\FreeRTOS\Sou #
#                    rce\include\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projec #
#                    ts\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Librar #
#                    ies\FreeRTOS\Source\ -I C:\Users\tony.tsou\Desktop\AmTRA #
#                    N\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\. #
#                    .\Libraries\STM32_USB_OTG_Driver\inc\ -I                 #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\STM32_USB_HO #
#                    ST_Library\Core\inc\ -I C:\Users\tony.tsou\Desktop\AmTRA #
#                    N\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\. #
#                    .\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\ -I     #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Libraries\AMT_Drivers\ #
#                    EXT_FLASH\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects #
#                    \15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Librarie #
#                    s\AMT_Drivers\HT68F30\ -I C:\Users\tony.tsou\Desktop\AmT #
#                    RAN\Projects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\.. #
#                    \..\Utilities\Third_Party\efsl\inc\ -I                   #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Utilities\Third_Party\ #
#                    fat_fs\inc\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Project #
#                    s\15_K2\DevCode\2\Projects\S4051A\EWARM\..\..\..\Utiliti #
#                    es\mainstream_v1\stm32f411\ -I                           #
#                    C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\..\..\Utilities\mainstream_v #
#                    1\stm32f411\it\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Pro #
#                    jects\15_K2\DevCode\2\Projects\S4051A\EWARM\..\APP_SRC\I #
#                    nclude\ -I C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15 #
#                    _K2\DevCode\2\Projects\S4051A\EWARM\..\APP_SRC\ -Ohz -I  #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Bootloader\Lis #
#                    t\GPIOLowLevel.lst                                       #
#    Object file  =  C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode #
#                    \2\Projects\S4051A\EWARM\..\Output\S4051A\Bootloader\Obj #
#                    \GPIOLowLevel.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\tony.tsou\Desktop\AmTRAN\Projects\15_K2\DevCode\2\Utilities\mainstream_v1\stm32f411\GPIOLowLevel.c
      1          //!	< Only for STM series	@{
      2          #if !defined (__ARM_CORTEX_MX__)	
      3          #error	The file is only used to STM32
      4          #else
      5          #include "GPIOLowLevel.h"
      6          #include "GPIOMiddleLevel.h"
      7          
      8          #define RCC_PERIPH_GPIOA RCC_AHB1Periph_GPIOA
      9          #define RCC_PERIPH_GPIOB RCC_AHB1Periph_GPIOB
     10          #define RCC_PERIPH_GPIOC RCC_AHB1Periph_GPIOC
     11          #define RCC_PERIPH_GPIOD RCC_AHB1Periph_GPIOD
     12          #define RCC_PERIPH_GPIOE RCC_AHB1Periph_GPIOE
     13          #define GPIO_SPEED GPIO_Speed_100MHz
     14          #define GPIO_MODE_IN GPIO_Mode_IN
     15          #define GPIO_MODE_OUT GPIO_Mode_OUT
     16          
     17          const GPIO_PhysicalPin PhysicalPins[__IO_MAX] = 
     18          {
     19              {GPIOE, GPIO_Pin_2, eOUT_PIN},      /* PE2  __O_DSP_RES, */
     20              {GPIOC, GPIO_Pin_0, eOUT_PIN},      /* PC0  __O_MCU_EEPROM_WP, */ 
     21              {GPIOC, GPIO_Pin_3, eOUT_PIN},      /* PC3  __O_RX_PD,  (RF module RX power down) */
     22              {GPIOA, GPIO_Pin_3, eOUT_PIN},      /* PA3  __O_RF_PAIRING,*/
     23              {GPIOA, GPIO_Pin_5, eIN_PIN },      /* PA5  __O_PAIRING_LED */
     24              {GPIOA, GPIO_Pin_6, eOUT_PIN},      /* PA6  __O_MUTE_REAR, */
     25              {GPIOA, GPIO_Pin_7, eOUT_PIN},      /* PA7  __O_USB_VIN */      
     26              {GPIOC, GPIO_Pin_4, eIN_PIN },      /* PC4  __I_HDMI_WAKE */
     27              {GPIOC, GPIO_Pin_5, eIN_PIN },      /* PC5  __I_MHL_CD0 */
     28              {GPIOE, GPIO_Pin_7, eOUT_PIN},      /* PE7  __O_HT68_RES, */
     29              {GPIOE, GPIO_Pin_8, eIN_PIN},       /* PE8  __I_BT_DET2, */ 
     30              {GPIOE, GPIO_Pin_10, eOUT_PIN},     /* PE10 __O_BT_PAIRING, */ 
     31              {GPIOE, GPIO_Pin_11, eOUT_PIN},     /* PE11 __O_EXT_FLASH_CS, */  
     32              {GPIOE, GPIO_Pin_12, eOUT_PIN},     /* PE12 __O_RST_AMP*/
     33              {GPIOE, GPIO_Pin_13, eIN_PIN},      /* PE13 __I_BT_DET1, */
     34          
     35              {GPIOE, GPIO_Pin_14, eOUT_PIN},     /* PE14 __O_CLK_SEL, */       
     36          
     37              {GPIOE, GPIO_Pin_15, eOUT_PIN},     /* PE15 __O_BT_ON */ 
     38              {GPIOB, GPIO_Pin_10, eIN_PIN},      /* PB10 __I_BT_DET3, */ 
     39              {GPIOB, GPIO_Pin_14, eOUT_PIN},     /* PB14 __O_RST_RF,*/
     40              {GPIOD, GPIO_Pin_8, eOUT_PIN},      /* PD8  __O_MUTE_AMP,*/
     41              {GPIOD, GPIO_Pin_9, eIN_PIN },      /* PD9  __I_BT_INF */ 
     42              {GPIOD, GPIO_Pin_10, eOUT_PIN},     /* PD10 __O_BT_REW */
     43              {GPIOD, GPIO_Pin_11, eOUT_PIN},     /* PD11 __O_BT_VOLUP */
     44              {GPIOD, GPIO_Pin_12, eOUT_PIN},     /* PD12 __O_BT_FWD */
     45              {GPIOD, GPIO_Pin_13, eOUT_PIN},     /* PD13 __O_BT_MFB */
     46              {GPIOD, GPIO_Pin_14, eOUT_PIN},     /* PD14 __O_BT_VOLDOWN */
     47              {GPIOD, GPIO_Pin_15, eOUT_PIN},     /* PD15 __O_BT_REST */
     48          
     49              {GPIOC, GPIO_Pin_6, eOUT_PIN},      /* PC6  __O_EN_1V, */
     50              {GPIOC, GPIO_Pin_8, eIN_PIN},       /* PC8  __I_CEC_LINE, */
     51              {GPIOC, GPIO_Pin_11, eOUT_PIN},     /* PC11 __O_CS5346_RST */
     52          
     53              {GPIOD, GPIO_Pin_0, eOUT_PIN},      /* PD0  __O_DE_5V, */
     54              {GPIOD, GPIO_Pin_1, eOUT_PIN},      /* PD1  __O_EN_24V, */
     55          
     56              {GPIOD, GPIO_Pin_2, eIN_PIN},       /* PD2  __I_AD_OVFL,*/ 
     57              {GPIOD, GPIO_Pin_3, eIN_PIN},       /* PD3  __I_AD_INT, */   
     58          
     59              {GPIOD, GPIO_Pin_4, eIN_PIN},       /* PD4  __I_CS8422_GPO_3 */
     60              {GPIOD, GPIO_Pin_5, eIN_PIN},       /* PD5  __I_CS8422_GPO_2 */
     61              {GPIOD, GPIO_Pin_6, eIN_PIN},       /* PD6  __I_CS8422_GPO_1 */
     62              {GPIOD, GPIO_Pin_7, eIN_PIN},       /* PD7  __I_CS8422_GPO_0 */
     63          
     64              {GPIOB, GPIO_Pin_5, eOUT_PIN},      /* PB5  __O_CS8422_RST, */
     65              {GPIOB, GPIO_Pin_9, eOUT_PIN},      /* PB9  __O_RST_HDMI_SIL953x */     
     66              {GPIOE, GPIO_Pin_10, eIN_PIN },     /* PE10 __I_HDMI_MUTE_OUT */
     67          
     68              {GPIOC, GPIO_Pin_1, eIN_PIN},       /* PC1  __I_SCP1_BUSY, */
     69              {GPIOC, GPIO_Pin_2, eIN_PIN},       /* PC2  __I_SCP1_IRQ,*/        
     70          
     71              {GPIOE, GPIO_Pin_4, eOUT_PIN},      /* PE4  __O_SPI1_NSS,*/   
     72          
     73              //{GPIOC, GPIO_Pin_2, eOUT_PIN},      /* PC2  __O_SAMPLE_RATE,*/
     74              
     75              //{GPIOA, GPIO_Pin_9, eOUT_PIN},      /* PA9  __O_USB_VBUS */
     76              //{GPIOD, GPIO_Pin_3, eIN_PIN },      /* PD3  __I_EN_MHL_VBUS */
     77              //{GPIOB, GPIO_Pin_6, eIN_PIN },      /* PB6  __I_HDMI_IN_HPD */
     78          };
     79          
     80          const GPIO_PhysicalPin SPIPins[__SPI_IO_MAX] = 
     81          {
     82              {GPIOE, GPIO_Pin_2, eIN_PIN},       /* PE2  __O_SPI_SCK,   */
     83              {GPIOE, GPIO_Pin_3, eIN_PIN},       /* PE3  __O_DSP_RES,   */    
     84              {GPIOE, GPIO_Pin_4, eIN_PIN},       /* PE4  __O_SPI1_NSS,  */
     85              {GPIOE, GPIO_Pin_5, eIN_PIN},       /* PE5  __O_SPI1_MISO, */
     86              {GPIOE, GPIO_Pin_6, eIN_PIN},       /* PE6  __O_SPI1_MOSI, */
     87          };
     88          
     89          /*_______________________________________________________________________________________________________________*/
     90          void SPI_GPIOLowLevel_DeConfiguration( void )
     91          {
     92          	GPIO_InitTypeDef GPIO_InitStructure;
     93          
     94          	for(uint8_t i=0; i < __SPI_IO_MAX; i++ )
     95          	{
     96          		GPIO_InitStructure.GPIO_Pin |= SPIPins[i].PINx;
     97          		GPIO_InitStructure.GPIO_Mode = GPIO_MODE_IN;
     98          		GPIO_InitStructure.GPIO_Speed = GPIO_SPEED;
     99          		GPIO_Init(SPIPins[i].PORTx, &GPIO_InitStructure);
    100          	}
    101          	
    102          	RCC_AHB1PeriphClockCmd( (RCC_PERIPH_GPIOA| RCC_PERIPH_GPIOB| RCC_PERIPH_GPIOC| RCC_PERIPH_GPIOE), ENABLE);
    103          
    104          }
    105          
    106          void GPIOLowLevel_Configuration( void )
    107          {
    108          	GPIO_InitTypeDef GPIO_InitStructure;
    109          
    110          	RCC_AHB1PeriphClockCmd( (RCC_PERIPH_GPIOA| RCC_PERIPH_GPIOB| RCC_PERIPH_GPIOC| RCC_PERIPH_GPIOD| RCC_PERIPH_GPIOE), ENABLE);
    111          
    112          
    113          	for(uint8_t i=0; i < __IO_MAX; i++ )
    114          	{
    115          		switch( PhysicalPins[i].IO )
    116          		{
    117          			case eOUT_PIN:
    118          			{
    119          				GPIO_InitStructure.GPIO_Pin = PhysicalPins[i].PINx;
    120          				GPIO_InitStructure.GPIO_Mode = GPIO_MODE_OUT; 
    121          				GPIO_InitStructure.GPIO_Speed = GPIO_SPEED;
    122          				GPIO_Init(PhysicalPins[i].PORTx, &GPIO_InitStructure);
    123          			}
    124          				break;
    125          
    126          			case eIN_PIN:
    127          			{
    128          				GPIO_InitStructure.GPIO_Pin = PhysicalPins[i].PINx;
    129          				GPIO_InitStructure.GPIO_Mode = GPIO_MODE_IN; 
    130          				GPIO_InitStructure.GPIO_Speed = GPIO_SPEED;
    131          				GPIO_Init(PhysicalPins[i].PORTx, &GPIO_InitStructure);
    132          			}
    133          				break;
    134          		}
    135          
    136          	}
    137          
    138          }
    139          
    140          void GPIOLowLevel_DeConfiguration( void )
    141          {
    142          	GPIO_InitTypeDef GPIO_InitStructure;
    143          
    144          	for(uint8_t i=0; i < __IO_MAX; i++ )
    145          	{
    146          		GPIO_InitStructure.GPIO_Pin |= PhysicalPins[i].PINx;
    147          		GPIO_InitStructure.GPIO_Mode = GPIO_MODE_IN;
    148          		GPIO_InitStructure.GPIO_Speed = GPIO_SPEED;
    149          		GPIO_Init(PhysicalPins[i].PORTx, &GPIO_InitStructure);
    150          	}
    151          	
    152          	RCC_AHB1PeriphClockCmd( (RCC_PERIPH_GPIOA| RCC_PERIPH_GPIOB| RCC_PERIPH_GPIOC| RCC_PERIPH_GPIOE), ENABLE);
    153          
    154          }
    155          
    156          
    157          void GPIOLowLevel_Set( VirtualPin pin )
    158          {
    159          	PhysicalPins[pin].PORTx->BSRRL = PhysicalPins[pin].PINx;
    160          };
    161          
    162          void GPIOLowLevel_Clr( VirtualPin pin )
    163          {
    164          	PhysicalPins[pin].PORTx->BSRRH = PhysicalPins[pin].PINx;
    165          }
    166          
    167          uint8_t	GPIOLowLevel_RinputPinBit( VirtualPin pin )
    168          {
    169          	uint8_t bitstatus = 0x00;
    170          
    171          	if( (PhysicalPins[pin].PORTx->IDR & PhysicalPins[pin].PINx) != (uint32_t)Bit_RESET )
    172          	{
    173          		bitstatus = (uint8_t)Bit_SET;
    174          	}
    175          	else
    176          	{
    177          		bitstatus = (uint8_t)Bit_RESET;
    178          	}
    179          
    180          	return bitstatus;
    181          }
    182          
    183          uint8_t GPIOLowLevel_RoutputPinBit( VirtualPin pin )
    184          {
    185          	uint8_t bitstatus = 0x00;
    186          	
    187          	if ((PhysicalPins[pin].PORTx->ODR & PhysicalPins[pin].PINx) != (uint32_t)Bit_RESET)
    188          	{
    189          		bitstatus = (uint8_t)Bit_SET;
    190          	}
    191          	else
    192          	{
    193          		bitstatus = (uint8_t)Bit_RESET;
    194          	}
    195          	
    196          	return bitstatus;
    197          }
    198          #endif //! (__ARM_CORTEX_MX__) @}
    199          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  GPIOLowLevel_Clr
       24  GPIOLowLevel_Configuration
             24 -> GPIO_Init
             24 -> RCC_AHB1PeriphClockCmd
       24  GPIOLowLevel_DeConfiguration
             24 -> GPIO_Init
             24 -> RCC_AHB1PeriphClockCmd
        0  GPIOLowLevel_RinputPinBit
        0  GPIOLowLevel_RoutputPinBit
        0  GPIOLowLevel_Set
       24  SPI_GPIOLowLevel_DeConfiguration
             24 -> GPIO_Init
             24 -> RCC_AHB1PeriphClockCmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ??Subroutine2_0
      10  ?Subroutine0
      14  ?Subroutine1
      18  GPIOLowLevel_Clr
      58  GPIOLowLevel_Configuration
      20  GPIOLowLevel_DeConfiguration
      28  GPIOLowLevel_RinputPinBit
      28  GPIOLowLevel_RoutputPinBit
      18  GPIOLowLevel_Set
     352  PhysicalPins
      40  SPIPins
      22  SPI_GPIOLowLevel_DeConfiguration

 
 628 bytes in section .text
 
 628 bytes of CODE memory

Errors: none
Warnings: none
